"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchnorrSECP256K1__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "HALF_Q",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "Q",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "signingPubKeyX",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "pubKeyYParity",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "signature",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "msgHash",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "nonceTimesGeneratorAddress",
                type: "address",
            },
        ],
        name: "verifySignature",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506108a2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638efb3bb214610046578063e493ef8c14610064578063ff51dff214610082575b600080fd5b61004e6100b2565b60405161005b9190610387565b60405180910390f35b61006c6100e5565b6040516100799190610387565b60405180910390f35b61009c6004803603810190610097919061046a565b610109565b6040516100a99190610500565b60405180910390f35b6001807ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141901c6100e2919061054a565b81565b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414181565b60007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141841061016d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016490610623565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156101aa5750600086115b80156101b65750600084115b80156101c25750600083115b610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f89061068f565b60405180910390fd5b60008686858560405160200161021a949392919061074e565b6040516020818303038152906040528051906020012060001c9050600060017ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141806102685761026761079c565b5b878a097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414161029691906107cb565b60001b60008960ff16146102ab57601c6102ae565b601b5b8a60001b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141806102e1576102e061079c565b5b8c870960001b604051600081526020016040526040516103049493929190610827565b6020604051602081039080840390855afa158015610326573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149250505095945050505050565b6000819050919050565b6103818161036e565b82525050565b600060208201905061039c6000830184610378565b92915050565b600080fd5b6103b08161036e565b81146103bb57600080fd5b50565b6000813590506103cd816103a7565b92915050565b600060ff82169050919050565b6103e9816103d3565b81146103f457600080fd5b50565b600081359050610406816103e0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104378261040c565b9050919050565b6104478161042c565b811461045257600080fd5b50565b6000813590506104648161043e565b92915050565b600080600080600060a08688031215610486576104856103a2565b5b6000610494888289016103be565b95505060206104a5888289016103f7565b94505060406104b6888289016103be565b93505060606104c7888289016103be565b92505060806104d888828901610455565b9150509295509295909350565b60008115159050919050565b6104fa816104e5565b82525050565b600060208201905061051560008301846104f1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105558261036e565b91506105608361036e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105955761059461051b565b5b828201905092915050565b600082825260208201905092915050565b7f7369676e6174757265206d7573742062652072656475636564206d6f64756c6f60008201527f2051000000000000000000000000000000000000000000000000000000000000602082015250565b600061060d6022836105a0565b9150610618826105b1565b604082019050919050565b6000602082019050818103600083015261063c81610600565b9050919050565b7f6e6f207a65726f20696e7075747320616c6c6f77656400000000000000000000600082015250565b60006106796016836105a0565b915061068482610643565b602082019050919050565b600060208201905081810360008301526106a88161066c565b9050919050565b6000819050919050565b6106ca6106c58261036e565b6106af565b82525050565b60008160f81b9050919050565b60006106e8826106d0565b9050919050565b6107006106fb826103d3565b6106dd565b82525050565b60008160601b9050919050565b600061071e82610706565b9050919050565b600061073082610713565b9050919050565b6107486107438261042c565b610725565b82525050565b600061075a82876106b9565b60208201915061076a82866106ef565b60018201915061077a82856106b9565b60208201915061078a8284610737565b60148201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006107d68261036e565b91506107e18361036e565b9250828210156107f4576107f361051b565b5b828203905092915050565b6000819050919050565b610812816107ff565b82525050565b610821816103d3565b82525050565b600060808201905061083c6000830187610809565b6108496020830186610818565b6108566040830185610809565b6108636060830184610809565b9594505050505056fea264697066735822122030eb8fff947fb80ed85819a019c4edfab865e7197bf956db1f6683e37342377e64736f6c634300080b0033";
const isSuperArgs = (xs) => xs.length > 1;
class SchnorrSECP256K1__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SchnorrSECP256K1__factory = SchnorrSECP256K1__factory;
SchnorrSECP256K1__factory.bytecode = _bytecode;
SchnorrSECP256K1__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Nobm9yclNFQ1AyNTZLMV9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mYWN0b3JpZXMvU2Nobm9yclNFQ1AyNTZLMV9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixtQ0FBNkU7QUFPN0UsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLFFBQVE7UUFDZCxPQUFPLEVBQUU7WUFDUDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxHQUFHO1FBQ1QsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxnQkFBZ0I7Z0JBQ3RCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLE9BQU87Z0JBQ3JCLElBQUksRUFBRSxlQUFlO2dCQUNyQixJQUFJLEVBQUUsT0FBTzthQUNkO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxXQUFXO2dCQUNqQixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsU0FBUztnQkFDZixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsNEJBQTRCO2dCQUNsQyxJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixPQUFPLEVBQUU7WUFDUDtnQkFDRSxZQUFZLEVBQUUsTUFBTTtnQkFDcEIsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLE1BQU07YUFDYjtTQUNGO1FBQ0QsZUFBZSxFQUFFLE1BQU07UUFDdkIsSUFBSSxFQUFFLFVBQVU7S0FDakI7Q0FDRixDQUFDO0FBRUYsTUFBTSxTQUFTLEdBQ2IsdzRJQUF3NEksQ0FBQztBQU0zNEksTUFBTSxXQUFXLEdBQUcsQ0FDbEIsRUFBcUMsRUFDZ0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0FBRXhFLE1BQWEseUJBQTBCLFNBQVEsd0JBQWU7SUFDNUQsWUFBWSxHQUFHLElBQXVDO1FBQ3BELElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3JCLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ2hCO2FBQU07WUFDTCxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqQztJQUNILENBQUM7SUFFRCxNQUFNLENBQ0osU0FBMkQ7UUFFM0QsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQThCLENBQUM7SUFDcEUsQ0FBQztJQUNELG9CQUFvQixDQUNsQixTQUEyRDtRQUUzRCxPQUFPLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFlO1FBQ3BCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQXFCLENBQUM7SUFDbkQsQ0FBQztJQUNELE9BQU8sQ0FBQyxNQUFjO1FBQ3BCLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQThCLENBQUM7SUFDNUQsQ0FBQztJQUdELE1BQU0sQ0FBQyxlQUFlO1FBQ3BCLE9BQU8sSUFBSSxjQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBOEIsQ0FBQztJQUNoRSxDQUFDO0lBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FDWixPQUFlLEVBQ2YsZ0JBQW1DO1FBRW5DLE9BQU8sSUFBSSxpQkFBUSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLENBQXFCLENBQUM7SUFDM0UsQ0FBQzs7QUFuQ0gsOERBb0NDO0FBWGlCLGtDQUFRLEdBQUcsU0FBUyxDQUFDO0FBQ3JCLDZCQUFHLEdBQUcsSUFBSSxDQUFDIn0=