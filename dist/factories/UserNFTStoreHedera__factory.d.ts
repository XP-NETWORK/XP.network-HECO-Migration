import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UserNFTStoreHedera, UserNFTStoreHederaInterface } from "../UserNFTStoreHedera";
declare type UserNFTStoreHederaConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class UserNFTStoreHedera__factory extends ContractFactory {
    constructor(...args: UserNFTStoreHederaConstructorParams);
    deploy(_noWhitelistUtils: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<UserNFTStoreHedera>;
    getDeployTransaction(_noWhitelistUtils: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): UserNFTStoreHedera;
    connect(signer: Signer): UserNFTStoreHedera__factory;
    static readonly bytecode = "0x60803461007a57601f6125b138819003918201601f19168301916001600160401b0383118484101761007f5780849260209460405283398101031261007a57516001600160a01b0381169081900361007a5760018060a01b031981816000541617600055600154161760015560405161251b90816100968239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6103a080604052600436101561001457600080fd5b600061038052610380513560e01c9081630e44263a14611e645750806318370d34146117f157806328815af3146117b95780633b3bff0f1461174d578063593d6e82146116335780637c41ad2c146115c75780638f8d7f991461154557806390e704e5146106b857806394dc2ed8146103a8578063af99c633146102d4578063d614cdb8146101ac5763f2c31ff4146100ac57600080fd5b34610197576040600319360112610197576100c5611e9a565b61012e61013c6100d3611ec2565b6040517ff2c31ff4000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff95861660248301529490911660448201529182906064820190565b03601f198101835282611fc2565b610380519161038051915190610380516101675af1610159612324565b901561019e576040818051810103126101975780610186604061017f6020829501612354565b9201612109565b82519160030b825215156020820152f35b6103805180fd5b506040601561038051610186565b34610197576020600319360112610197576101c5611e9a565b6101cd612228565b5060405173ffffffffffffffffffffffffffffffffffffffff60208201927fd614cdb80000000000000000000000000000000000000000000000000000000084521660248201526024815261022181611fa6565b610380519161038051915190610380516101675af161023e612324565b90610247612228565b90156102c5575080518101608082820312610197576102c361027d83604060206102748160809801612354565b950191016123e7565b6040519260030b835260208301906040908163ffffffff9182815116855273ffffffffffffffffffffffffffffffffffffffff6020820151166020860152015116910152565bf35b608091506102c360159161027d565b34610197576040600319360112610197576102ed611e9a565b61012e6103566102fb611ec2565b6040517faf99c633000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff95861660248301529490911660448201529182906064820190565b610380519161038051915190610380516101675af1610373612324565b901561039e57602081805181010312610197576103936020809201612354565b6040519060030b8152f35b5060206015610393565b346101975760c0600319360112610197576004356103c4611ec2565b906044356064359173ffffffffffffffffffffffffffffffffffffffff928381168091036101975760a435848116809103610197578360601c94604051927f0a754de60000000000000000000000000000000000000000000000000000000084526020938481600481610380518c5af18015610635576103805190610689575b61045b91506016811490811561067e575b5061207e565b60048483610380515416604051928380927f7bcde4d800000000000000000000000000000000000000000000000000000000825261038051905af1908115610635576103805191610643575b5060016104b691151514612116565b6040519384019046825230604086015285606086015282891660808601528660a086015260c085015260c0845260e0840167ffffffffffffffff948082108683111761060257603461055191836040526101008101947f556e667265657a65457263373231416374696f6e00000000000000000000000086526105418251809261011485019061217b565b8101036014810184520182611fc2565b5190209061038051541691823b1561019757604051947f06cd4d0d000000000000000000000000000000000000000000000000000000008652600486015260843560248601526044850152606484015282608481610380519361038051905af18015610635576105eb575b6105e460166105de6bffffffffffffffffffffffff861660070b88308961242e565b1461219e565b6103805180f35b8193911161060257604092909252816105e46105bc565b7f4e487b710000000000000000000000000000000000000000000000000000000061038051526041600452602461038051fd5b6040513d61038051823e3d90fd5b90508481813d8311610677575b61065a8183611fc2565b810103126101975760016106706104b692612109565b91506104a7565b503d610650565b60c29150148a610455565b508481813d83116106b1575b61069f8183611fc2565b810103126101975761045b9051610444565b503d610695565b60a0600319360112610197576106cc611e9a565b610220526044356102a05267ffffffffffffffff6102a051166102a051036101975760643567ffffffffffffffff81116101975761070e903690600401612001565b60843567ffffffffffffffff81116101975761072e903690600401612001565b6040517f0a754de60000000000000000000000000000000000000000000000000000000081526020816004816103805160243560601c5af18015610635576103805190611511575b61078c915060168114908115611506575061207e565b6004602073ffffffffffffffffffffffffffffffffffffffff610380515416604051928380927f7bcde4d800000000000000000000000000000000000000000000000000000000825261038051905af19081156106355761038051916114c6575b5060016107fc91151514612116565b6004602073ffffffffffffffffffffffffffffffffffffffff610380515416604051928380927f28dc132d0000000000000000000000000000000000000000000000000000000082525afa801561063557610380516101e052611492575b50610863612258565b506040517f287e1da800000000000000000000000000000000000000000000000000000000602082015260248035606081901c918301919091526bffffffffffffffffffffffff1660070b60448201526108c0816064810161012e565b6103805181519091829190602001826101675af16108dc612324565b6080526108e7612258565b90156114885750608051805181016101c0526040816101c05103126101975761091260208201612354565b61020052604081015160c05267ffffffffffffffff60c051116101975760c0908151016101c0510312610197576040516102c0526109526102c051611f8a565b60c05160805101602081015160e05267ffffffffffffffff60e05111610197576101209060e051016101c0510312610197576040516102e0526109976102e051611f06565b60e05160c0516080510101602081015160a05267ffffffffffffffff60a05111610197576101609060a051016101c051031261019757604051916109da83611f06565b60a05160e05160c05160805101010160208101519067ffffffffffffffff8211610197576020610a1292816101c05101920101612362565b835260a05160e05160c05160805101010160408101519067ffffffffffffffff8211610197576020610a4c92816101c05101920101612362565b6020840152610a6b606060a05160e05160c051608051010101016123a7565b604084015260a05160e05160c05160805101010160808101519067ffffffffffffffff8211610197576020610aa892816101c05101920101612362565b6060840152610ac660a0805160e05160c05160805101010101612109565b6080840152610ae460c060a05160e0518251608051010101016123c8565b60a0840152610b0260e060a051815160c05160805101010101612109565b60c084015260a05160e05160c051608051010101916101008301519267ffffffffffffffff84116101975760206101c05101603f858301011215610197578360209101015161018052610b5761018051612055565b6101a05260405161030052610b726101a05161030051611fc2565b610300516101005261018051610300515260206103005101610100528260a05160e05160c051608051010101016103605260206101c0510160406101805160051b6103605101011161019757604061036051015b8360a05160e05160c051608051010101019060406101805160051b830101811015610d215780519167ffffffffffffffff8311610197576040601f198483016101c0510301126101975760405190610c1d82611f52565b80840160408101518352606001519067ffffffffffffffff82116101975760a0601f1983878401016101c0510301126101975760405191610c5d83611f6e565b610c6d6040828885010101612109565b8352610c7f60608288850101016123a7565b602084015260808187840101015167ffffffffffffffff811161019757610cb690604060206101c0510191848a8701010101612362565b604084015260a0818784010101519067ffffffffffffffff821161019757602096610d0393610cf660c09460408b6101c051019186868601010101612362565b60608701520101016123a7565b60808201528382015261010051528161010051016101005201610bc6565b50509150916103005160e0820152610d5160206101c0510161012060a05160e05160c051608051010101016123e7565b6101008201526102e05152604060e05160c0516080510101015167ffffffffffffffff811681036101975760206102e0510152610d9a606060e05160c051608051010101612109565b60406102e0510152610db7608060e05160c0518251010101612109565b60606102e0510152610dd560a060e05160c051608051010101612109565b60806102e051015260e05160c05160805101019160c08301519267ffffffffffffffff84116101975760206101c05101603f858301011215610197578360209101015161016052610e2861016051612055565b610e356040519182611fc2565b61016051815260208101938060e05160c0516080510101016103205260206101c05101604060a0610160510261032051010111610197579360406103205101610260525b604060a061016051028660e05160c0516080510101010101610260511015610f2c5760a06020610260516101c0510301126101975760206040918251610ebe81611f6e565b610eca610260516123d6565b8152610eda8361026051016123a7565b83820152610eec846102605101612109565b84820152610eff60606102605101612109565b6060820152610f13608061026051016123a7565b60808201528152610260805160a0019052019050610e79565b509091925060a06102e051015260e05160c051608051010160e08101519067ffffffffffffffff82116101975760206101c05101603f83830101121561019757810160200151610f7b81612055565b91610f896040519384611fc2565b826101205281835260208301610120528060e05160c05160805101010160206101c05101604060c085028301011161019757604001610240525b604060c083028260e05160c05160805101010101016102405110156110975760c06020610240516101c0510301126101975760c0604092835161100581611f8a565b611011610240516123d6565b8152611022602061024051016123d6565b60208201526110358561024051016123d6565b85820152611048606061024051016123d6565b606082015261105c60806102405101612109565b608082015261107060a061024051016123a7565b60a08201526101205152602061012051016101205281610240510161024052925050610fc3565b505060c06102e051015260e05160c0516080510101916101008301519267ffffffffffffffff84116101975760206101c05101603f8583010112156101975783602091010151610140526110ed61014051612055565b6110fa6040519182611fc2565b61014051815260208101938060e05160c0516080510101016103405260206101c05101604060c0610140510261034051010111610197579360406103405101610280525b604060c061014051028660e05160c05160805101010101016102805110156112055760c06020610280516101c051030112610197576020604091825161118381611f8a565b61118f610280516123d6565b815261119f8361028051016123d6565b838201526111b18461028051016123d6565b848201526111c4606061028051016123a7565b60608201526111d860806102805101612109565b60808201526111ec60a061028051016123a7565b60a08201528152610280805160c001905201905061113e565b509091925060e06102e051015260e05160c05160805101016101208101519067ffffffffffffffff821161019757602061124792816101c05101920101612362565b6101006102e05101526102e0516102c0515261126b604060c05160805101016123c8565b60206102c0510152611285606060c05160805101016123a7565b60406102c051015261129e608060c051815101016123c8565b60606102c051015260c0516080510160a08101519067ffffffffffffffff82116101975760206112d692816101c05101920101612362565b60806102c05101526112ef60c0805160805101016123a7565b60a06102c0510152610200519160166102c051935b60030b0361142a576113b5611372926113a760807fa67c5186c697f2bbadb0b86a04669ed6318303bc6aa662b8148bd3c7342981529601516040519586956101e051875267ffffffffffffffff6102a051166020880152346040880152610100806060890152870190612203565b90602435608087015273ffffffffffffffffffffffffffffffffffffffff610220511660a087015285820360c0870152612203565b9083820360e0850152612203565b0390a16113e160166105de6bffffffffffffffffffffffff6024351660070b303360243560601c61242e565b73ffffffffffffffffffffffffffffffffffffffff6001541661038051903415611420575b61038051918291829182913491f115610635576103805180f35b6108fc9150611406565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4661696c656420746f2067657420746f6b656e20696e666f00000000000000006044820152fd5b9160166015611304565b6020813d6020116114be575b816114ab60209383611fc2565b8101031261019757516101e0528261085a565b3d915061149e565b90506020813d6020116114fe575b816114e160209383611fc2565b810103126101975760016114f76107fc92612109565b91506107ed565b3d91506114d4565b60c291501484610455565b506020813d60201161153d575b8161152b60209383611fc2565b810103126101975761078c9051610776565b3d915061151e565b346101975760406003193601126101975761155e611e9a565b61012e61035661156c611ec2565b6040517f8f8d7f99000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff95861660248301529490911660448201529182906064820190565b34610197576020600319360112610197576115e0611e9a565b60405173ffffffffffffffffffffffffffffffffffffffff60208201927f7c41ad2c0000000000000000000000000000000000000000000000000000000084521660248201526024815261035681611fa6565b346101975760806003193601126101975761164c611e9a565b60607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601126101975760405161168281611fa6565b63ffffffff602435818116810361019757825273ffffffffffffffffffffffffffffffffffffffff9160443583811681036101975760208201526064359182168203610197576117409160408201526040519260208401947f593d6e8200000000000000000000000000000000000000000000000000000000865216602484015260448301906040908163ffffffff9182815116855273ffffffffffffffffffffffffffffffffffffffff6020820151166020860152015116910152565b6084815261035681611f8a565b3461019757602060031936011261019757611766611e9a565b60405173ffffffffffffffffffffffffffffffffffffffff60208201927f3b3bff0f0000000000000000000000000000000000000000000000000000000084521660248201526024815261035681611fa6565b34610197576103805160031936011261019757602073ffffffffffffffffffffffffffffffffffffffff610380515416604051908152f35b34610197576003196040813601126101975761180b611e9a565b9067ffffffffffffffff602435116101975761016090602435360301126101975760405161183881611f06565b6024356004013567ffffffffffffffff81116101975761186090600436916024350101612001565b815260248035013567ffffffffffffffff81116101975761188990600436916024350101612001565b602082015261189c604460243501611ee5565b60408201526064602435013567ffffffffffffffff8111610197576118c990600436916024350101612001565b60608201526118dc608460243501612048565b608082015260243560a40135600781900b90036101975760a4602435013560a082015261190d60c460243501612048565b60c082015260e4602435013567ffffffffffffffff8111610197573660238260243501011215610197576004816024350101359061194a82612055565b916119586040519384611fc2565b80835260208301913660248360051b838235010101116101975760248181350101925b60248360051b8382350101018410611cb9575050505060e082015260607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefc60243536030112610197576040516119d081611fa6565b6119df6101046024350161206d565b81526119f061012460243501611ee5565b6020820152611a046101446024350161206d565b604082015261010082015273ffffffffffffffffffffffffffffffffffffffff604051927f18370d340000000000000000000000000000000000000000000000000000000060208501521660248301526040604483015281611b02611aae611a7a845161016060648601526101c4850190612203565b60208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c858303016084860152612203565b73ffffffffffffffffffffffffffffffffffffffff60408501511660a484015260608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c8483030160c4850152612203565b6080830151151560e483015260a083015160070b61010483015260c0830151151561012483015260e0830151907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c83820301610144840152815180825260208201916020808360051b83010194019261038051915b838310611be957610100880151805163ffffffff9081166101648a0152602082015173ffffffffffffffffffffffffffffffffffffffff166101848a0152604090910151166101a488015286611bcd818861012e565b6103805181519091829190602001826101675af1610373612324565b9193969550919360208082601f198560019503018652818a518051835201519060408382015281511515604082015273ffffffffffffffffffffffffffffffffffffffff8383015116606082015260c073ffffffffffffffffffffffffffffffffffffffff6080611c9f611c6b604087015160a08488015260e0870190612203565b60608701517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08783030160a0880152612203565b940151169101529801930193019092879596949293611b77565b67ffffffffffffffff8435116101975760407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc85358460243501013603011261019757604051611d0881611f52565b60248035840186350190810135825267ffffffffffffffff604490910135116101975760a0602435840186350160448101350136037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc011261019757604051611d7081611f6e565b611d8860248035860188350160448101350101612048565b8152611da260448735602435870101818101350101611ee5565b602082015267ffffffffffffffff6024358501873501604481013501606401351161019757611de63660248035870189350160448101350160648101350101612001565b604082015267ffffffffffffffff60243585018735016044810135016084013511610197576024926020928392611e3136873589018b35016044810135016084810135018801612001565b6060820152611e4e863588018a350160448101350160a401611ee5565b608082015283820152815201940193905061197b565b3461019757602060031936011261019757600435606081901c82526bffffffffffffffffffffffff1660070b6020820152604090f35b6004359073ffffffffffffffffffffffffffffffffffffffff82168203611ebd57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203611ebd57565b359073ffffffffffffffffffffffffffffffffffffffff82168203611ebd57565b610120810190811067ffffffffffffffff821117611f2357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117611f2357604052565b60a0810190811067ffffffffffffffff821117611f2357604052565b60c0810190811067ffffffffffffffff821117611f2357604052565b6060810190811067ffffffffffffffff821117611f2357604052565b90601f601f19910116810190811067ffffffffffffffff821117611f2357604052565b67ffffffffffffffff8111611f2357601f01601f191660200190565b81601f82011215611ebd5780359061201882611fe5565b926120266040519485611fc2565b82845260208383010111611ebd57816000926020809301838601378301015290565b35908115158203611ebd57565b67ffffffffffffffff8111611f235760051b60200190565b359063ffffffff82168203611ebd57565b1561208557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4661696c656420746f206173736f636961746520746f6b656e20746f2074686560448201527f206163636f756e740000000000000000000000000000000000000000000000006064820152fd5b51908115158203611ebd57565b1561211d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f556e61626c6520746f20696e6372656d656e7420616374696f6e2069640000006044820152fd5b60005b83811061218e5750506000910152565b818101518382015260200161217e565b156121a557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4661696c656420746f207472616e7366657220746f6b656e2e000000000000006044820152fd5b90601f19601f6020936122218151809281875287808801910161217b565b0116010190565b604051906060820182811067ffffffffffffffff821117611f235760405260006040838281528260208201520152565b6040519060c0820182811067ffffffffffffffff821117611f23578060405260a08361228383611f06565b6040519261229084611f06565b60609081855281602086015260008581604081980152838082015281608082015281868201528160c08201528360e08201526122ca612228565b90610100918282015283528160e086015284015284610120840152846101408401528161016084015281610180840152816101a0840152816101c08401528252836020830152836040830152838183015260808201520152565b3d1561234f573d9061233582611fe5565b916123436040519384611fc2565b82523d6000602084013e565b606090565b51908160030b8203611ebd57565b81601f82011215611ebd57805161237881611fe5565b926123866040519485611fc2565b81845260208284010111611ebd576123a4916020808501910161217b565b90565b519073ffffffffffffffffffffffffffffffffffffffff82168203611ebd57565b51908160070b8203611ebd57565b519063ffffffff82168203611ebd57565b9190826060910312611ebd576040516123ff81611fa6565b6040612429818395612410816123d6565b855261241e602082016123a7565b6020860152016123d6565b910152565b92906040519260208401947f5cfc901100000000000000000000000000000000000000000000000000000000865273ffffffffffffffffffffffffffffffffffffffff9283809216602487015216604485015216606483015260070b60848201526084815261249c81611f8a565b6000809281925190826101675af1906124b3612324565b91156124dc576020828051810103126124d9575060206124d39101612354565b60030b90565b80fd5b505060156124d356fea26469706673582212204f7d2212b11d35db8baf557d364309d79cc17590c71c923f3d541c3ff7c2c5ba64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "_noWhitelistUtils";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "actionId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "chainNonce";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "txFees";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "to";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "contractAddr";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "tokenData";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "mintWith";
            readonly type: "string";
        }];
        readonly name: "TransferErc721";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "data";
            readonly type: "uint256";
        }];
        readonly name: "decodeHts";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "int64";
            readonly name: "";
            readonly type: "int64";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "erc721Contract";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint64";
            readonly name: "chainNonce";
            readonly type: "uint64";
        }, {
            readonly internalType: "string";
            readonly name: "to";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "mintWith";
            readonly type: "string";
        }];
        readonly name: "freezeErc721";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "getTokenExpiryInfo";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "responseCode";
            readonly type: "int256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "second";
                readonly type: "uint32";
            }, {
                readonly internalType: "address";
                readonly name: "autoRenewAccount";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "autoRenewPeriod";
                readonly type: "uint32";
            }];
            readonly internalType: "struct IHederaTokenService.Expiry";
            readonly name: "expiryInfo";
            readonly type: "tuple";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "grantTokenKyc";
        readonly outputs: readonly [{
            readonly internalType: "int64";
            readonly name: "responseCode";
            readonly type: "int64";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "isKyc";
        readonly outputs: readonly [{
            readonly internalType: "int64";
            readonly name: "responseCode";
            readonly type: "int64";
        }, {
            readonly internalType: "bool";
            readonly name: "kycGranted";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "noWhitelistUtils";
        readonly outputs: readonly [{
            readonly internalType: "contract INoWhitelistUtils";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "pauseToken";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "responseCode";
            readonly type: "int256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "revokeTokenKyc";
        readonly outputs: readonly [{
            readonly internalType: "int64";
            readonly name: "responseCode";
            readonly type: "int64";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "unpauseToken";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "responseCode";
            readonly type: "int256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "second";
                readonly type: "uint32";
            }, {
                readonly internalType: "address";
                readonly name: "autoRenewAccount";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "autoRenewPeriod";
                readonly type: "uint32";
            }];
            readonly internalType: "struct IHederaTokenService.Expiry";
            readonly name: "expiryInfo";
            readonly type: "tuple";
        }];
        readonly name: "updateTokenExpiryInfo";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "responseCode";
            readonly type: "int256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "name";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "symbol";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "treasury";
                readonly type: "address";
            }, {
                readonly internalType: "string";
                readonly name: "memo";
                readonly type: "string";
            }, {
                readonly internalType: "bool";
                readonly name: "tokenSupplyType";
                readonly type: "bool";
            }, {
                readonly internalType: "int64";
                readonly name: "maxSupply";
                readonly type: "int64";
            }, {
                readonly internalType: "bool";
                readonly name: "freezeDefault";
                readonly type: "bool";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "keyType";
                    readonly type: "uint256";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "bool";
                        readonly name: "inheritAccountKey";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "address";
                        readonly name: "contractId";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "ed25519";
                        readonly type: "bytes";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "ECDSA_secp256k1";
                        readonly type: "bytes";
                    }, {
                        readonly internalType: "address";
                        readonly name: "delegatableContractId";
                        readonly type: "address";
                    }];
                    readonly internalType: "struct IHederaTokenService.KeyValue";
                    readonly name: "key";
                    readonly type: "tuple";
                }];
                readonly internalType: "struct IHederaTokenService.TokenKey[]";
                readonly name: "tokenKeys";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint32";
                    readonly name: "second";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "address";
                    readonly name: "autoRenewAccount";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "autoRenewPeriod";
                    readonly type: "uint32";
                }];
                readonly internalType: "struct IHederaTokenService.Expiry";
                readonly name: "expiry";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHederaTokenService.HederaToken";
            readonly name: "tokenInfo";
            readonly type: "tuple";
        }];
        readonly name: "updateTokenInfo";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "responseCode";
            readonly type: "int256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "actionId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "contractAddr";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "sig";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "proofAddr";
            readonly type: "address";
        }];
        readonly name: "validateUnfreezeErc721";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): UserNFTStoreHederaInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): UserNFTStoreHedera;
}
export {};
