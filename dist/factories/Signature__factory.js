"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Signature__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_validatorPKX",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "_validatorPKYP",
                type: "uint8",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "HALF_Q",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "Q",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "nftWhitelist",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "actionId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "contractAddr",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "sig",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "proofAddr",
                type: "address",
            },
        ],
        name: "validateWhitelistNft",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "validatorPKX",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "validatorPKYParity",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "signingPubKeyX",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "pubKeyYParity",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "signature",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "msgHash",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "nonceTimesGeneratorAddress",
                type: "address",
            },
        ],
        name: "verifySignature",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x6080346100d057601f61062338819003918201601f19168301916001600160401b038311848410176100d55780849260409485528339810103126100d057602081519101519060ff82168092036100d0576fa2a8918ca85bafe22016d0b997e4df5f600160ff1b0381101561008b5760005560ff19600154161760015560405161053790816100ec8239f35b60405162461bcd60e51b815260206004820152601b60248201527f5075626c6963206b6579206d757374206265203c2048414c465f5100000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816316b47ef7146103035750806346b31b6e146102c55780638b4e54aa146101575780638efb3bb21461011c578063de1ab9a0146100ff578063e493ef8c146100ce5763ff51dff21461007057600080fd5b346100ca5760a03660031901126100ca576024359060ff821682036100c657608435936001600160a01b03851685036100c35750926100ba91602094606435916044359135610322565b90519015158152f35b80fd5b8380fd5b8280fd5b5050346100fb57816003193601126100fb575170014551231950b75fc4402da1732fc9bebe198152602090f35b5080fd5b5050346100fb57816003193601126100fb57602091549051908152f35b5050346100fb57816003193601126100fb57602090517f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a18152f35b50346100ca5760803660031901126100ca576001600160a01b039060243582811691908290036102c15760643592831683036102c15783519260209346858201523086820152823560608201528360808201526080815260a0810167ffffffffffffffff8282108183111761029a5781885260c0830192712bb434ba32b634b9ba27333a20b1ba34b7b760711b84528051888b5b8281106102ad575050908060a09281018c60d2820152036012810185526051601f199101160101908282109082111761029a578752519020865460015461023b9392916044359160ff1690610322565b1561025757508352600290528120805460ff1916600117905580f35b835162461bcd60e51b8152908101839052601a60248201527f6661696c656420746f20766572696679207369676e61747572650000000000006044820152606490fd5b634e487b7160e01b895260418552602489fd5b80840160d2838201519101520189906101eb565b8480fd5b50346100ca5760203660031901126100ca57356001600160a01b038116908190036100ca57818360ff92602095526002855220541690519015158152f35b8490346100fb57816003193601126100fb5760209060ff600154168152f35b70014551231950b75fc4402da1732fc9bebe19949390929190858310156104b1576001600160a01b0385811696909590871515806104a8575b8061049f575b80610496575b156104585760405191602083019387855260ff60f81b8660f81b16604085015260418401526bffffffffffffffffffffffff199060601b16606183015260558252608082019282841067ffffffffffffffff851117610442578190846040528351902095870981039080821161042c5760209660009660ff60e0948160809916158a1461042457601b905b88521660a08601528160c08601520991015282805260015afa1561041857600051161490565b6040513d6000823e3d90fd5b601c906103f2565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b81526020600482015260166024820152751b9bc81e995c9bc81a5b9c1d5d1cc8185b1b1bddd95960521b6044820152606490fd5b50821515610367565b50841515610361565b5085151561035b565b60405162461bcd60e51b815260206004820152602260248201527f7369676e6174757265206d7573742062652072656475636564206d6f64756c6f604482015261205160f01b6064820152608490fdfea26469706673582212201ce3492092a148ede850a907d0264d8c2845b5ea7ec6ca73f7aca169054fb6e464736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class Signature__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_validatorPKX, _validatorPKYP, overrides) {
        return super.deploy(_validatorPKX, _validatorPKYP, overrides || {});
    }
    getDeployTransaction(_validatorPKX, _validatorPKYP, overrides) {
        return super.getDeployTransaction(_validatorPKX, _validatorPKYP, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Signature__factory = Signature__factory;
Signature__factory.bytecode = _bytecode;
Signature__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lnbmF0dXJlX19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2ZhY3Rvcmllcy9TaWduYXR1cmVfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEIsbUNBT2dCO0FBS2hCLE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLGVBQWU7Z0JBQ3JCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLE9BQU87Z0JBQ3JCLElBQUksRUFBRSxnQkFBZ0I7Z0JBQ3RCLElBQUksRUFBRSxPQUFPO2FBQ2Q7U0FDRjtRQUNELGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxhQUFhO0tBQ3BCO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxRQUFRO1FBQ2QsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsR0FBRztRQUNULE9BQU8sRUFBRTtZQUNQO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLE1BQU07UUFDdkIsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsU0FB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