import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UserNftMinter, UserNftMinterInterface } from "../UserNftMinter";
declare type UserNftMinterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class UserNftMinter__factory extends ContractFactory {
    constructor(...args: UserNftMinterConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<UserNftMinter>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): UserNftMinter;
    connect(signer: Signer): UserNftMinter__factory;
    static readonly bytecode = "0x60803462000317576001600160401b03906040908082018381118282101762000301578252600d81526020906c2ab9b2b927333a26b4b73a32b960991b828201528251938385018581108282111762000301578452600385526215535560ea1b83860152815181811162000301576000938454916001948584811c94168015620002f6575b83851014620002e2578190601f948581116200028f575b5083908583116001146200022b5788926200021f575b5050600019600383901b1c191690851b1785555b86519283116200020b5783548481811c9116801562000200575b82821014620001ec57828111620001a4575b50809183116001146200013d57508394958293949262000131575b5050600019600383901b1c191690821b1790555b6007555161141f90816200031d8239f35b0151905038806200010c565b90601f198316968486528286209286905b8982106200018c57505083859697981062000172575b505050811b01905562000120565b015160001960f88460031b161c1916905538808062000164565b8087859682949686015181550195019301906200014e565b8486528186208380860160051c820192848710620001e2575b0160051c019085905b828110620001d6575050620000f1565b878155018590620001c6565b92508192620001bd565b634e487b7160e01b86526022600452602486fd5b90607f1690620000df565b634e487b7160e01b85526041600452602485fd5b015190503880620000b1565b8880528489208894509190601f1984168a5b878282106200027857505084116200025e575b505050811b018555620000c5565b015160001960f88460031b161c1916905538808062000250565b8385015186558b979095019493840193016200023d565b9091508780528388208580850160051c820192868610620002d8575b918991869594930160051c01915b828110620002c95750506200009b565b8a8155859450899101620002b9565b92508192620002ab565b634e487b7160e01b87526022600452602487fd5b93607f169362000084565b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610c865750816306fdde0314610bde578163081812fc14610bbe578163095ea7b314610a5057816317d70f7c14610a3157816323b872dd14610a0c57816342842e0e146109d857816342966c68146108795781636352211e1461084557816370a08231146107af57816395d89b41146106cc578163a22cb46514610600578163b88d4fde1461057b578163c87b56dd1461046c578163d85d3d2714610125575063e985e9c5146100d557600080fd5b3461012157806003193601126101215760ff816020936100f3610d31565b6100fb610d4c565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b8391503461012157602090816003193601126104685780359167ffffffffffffffff8084116104645736602385011215610464578383013591818311610460576024943686858301011161045c576007548851908382018281108682111761044a578a52888252331561040a579161025461024f6102619385808e8e9f988f906101c76101cd91600052600260205260018060a01b0360406000205416151590565b15611386565b6000838152600260205260409020546101f0906001600160a01b031615156101c7565b33815260038b52209d60019e8f815401905581815260028a52888120336bffffffffffffffffffffffff60a01b82541617905533907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4336111df565b610fdd565b6007549588369201610e07565b6000858152600260205260409020549094906001600160a01b0316156103b157885260068252872092805192831161039f579082916102a08554610eb0565b601f8111610366575b5081601f8411600114610303575088926102f8575b5050600019600383901b1c191690851b1790555b6007549283018093116102e757505060075580f35b634e487b7160e01b84526011905282fd5b0151905087806102be565b9190889450601f198416868b52838b20938b905b82821061034d5750508411610334575b505050811b0190556102d2565b015160001960f88460031b161c19169055878080610327565b8484015186558b97909501949384019390810190610317565b61038f90868b52838b20601f860160051c810191858710610395575b601f0160051c01906113d2565b896102a9565b9091508190610382565b634e487b7160e01b8852604185528588fd5b815162461bcd60e51b8152808701849052602e818901527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608490fd5b606487858a818e519362461bcd60e51b85528401528201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b634e487b7160e01b8a5260418852888afd5b8680fd5b8580fd5b8480fd5b8280fd5b91905034610468576020918260031936011261057757356000818152600260205260409020546104a6906001600160a01b03161515610e3e565b8352600682528083209281518094829080546104c181610eb0565b91828552600191888382169182600014610550575050600114610512575b50505061050e9392916104f3910386610dc9565b81516104fe81610d97565b5251928284938452830190610cf1565b0390f35b8552868520879350859291905b82841061053857505050820101816104f361050e6104df565b8054848b01860152899550889490930192810161051f565b60ff19168782015293151560051b860190930193508492506104f3915061050e90506104df565b8380fd5b83903461012157608036600319011261012157610596610d31565b9061059f610d4c565b916044356064359367ffffffffffffffff85116104605736602386011215610460576105da61024f948660246105fd98369301359101610e07565b926105ed6105e88433611001565b610f28565b6105f88383836110c9565b6112fb565b80f35b9190503461046857806003193601126104685761061b610d31565b9060243591821515809303610464576001600160a01b03169233841461068a5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b5050346101215781600319360112610121578051908260018054916106f083610eb0565b80865292828116908115610787575060011461072b575b5050506107198261050e940383610dc9565b51918291602083526020830190610cf1565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82861061076f5750505061071982602061050e9582010194610707565b80546020878701810191909152909501948101610752565b61050e97508693506020925061071994915060ff191682840152151560051b82010194610707565b83915034610121576020366003190112610121576001600160a01b036107d3610d31565b169081156107f05760208480858581526003845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b828434610876576020366003190112610876575061086560209235610e8a565b90516001600160a01b039091168152f35b80fd5b838334610121576020908160031936011261046857833561089981610e8a565b6001600160a01b039033908216036109955784809683926108b984610e8a565b506108c384610e8a565b84845291875285832080546001600160a01b031990811690915591168083526003875285832080546000190190558383526002875285832080549092169091557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a46006835261093782852054610eb0565b61094057505050f35b8352600682528220906109538254610eb0565b908161095e57505050f35b81601f859311600114610972575050505580f35b83835281832061098d91601f0160051c8101906001016113d2565b812091555580f35b825162461bcd60e51b8152808701859052601b60248201527f63616c6c657220646f65736e2774206f776e2074686973206e667400000000006044820152606490fd5b5050346101215761024f6105fd916109ef36610d62565b919251926109fc84610d97565b8684526105ed6105e88433611001565b8334610876576105fd610a1e36610d62565b91610a2c6105e88433611001565b6110c9565b5050346101215781600319360112610121576020906007549051908152f35b905034610468578160031936011261046857610a6a610d31565b6024359290916001600160a01b0391908280610a8587610e8a565b16941693808514610b7157803314908115610b52575b5015610aea57848652602052842080546001600160a01b03191683179055610ac283610e8a565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff828720541638610a9b565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b828434610876576020366003190112610876575061086560209235610eea565b505034610121578160031936011261012157805190828054610bff81610eb0565b808552916001918083169081156107875750600114610c2a575050506107198261050e940383610dc9565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610c6e5750505061071982602061050e9582010194610707565b80546020878701810191909152909501948101610c51565b849134610468576020366003190112610468573563ffffffff60e01b811680910361046857602092506380ac58cd60e01b8114908115610ce0575b8115610ccf575b5015158152f35b6301ffc9a760e01b14905083610cc8565b635b5e139f60e01b81149150610cc1565b919082519283825260005b848110610d1d575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610cfc565b600435906001600160a01b0382168203610d4757565b600080fd5b602435906001600160a01b0382168203610d4757565b6060906003190112610d47576001600160a01b03906004358281168103610d4757916024359081168103610d47579060443590565b6020810190811067ffffffffffffffff821117610db357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610db357604052565b67ffffffffffffffff8111610db357601f01601f191660200190565b929192610e1382610deb565b91610e216040519384610dc9565b829481845281830111610d47578281602093846000960137010152565b15610e4557565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b0316610ead811515610e3e565b90565b90600182811c92168015610ee0575b6020831014610eca57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ebf565b600081815260026020526040902054610f0d906001600160a01b03161515610e3e565b6000908152600460205260409020546001600160a01b031690565b15610f2f57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15610fe457565b60405162461bcd60e51b815280610ffd60048201610f8a565b0390fd5b906001600160a01b03808061101584610e8a565b16931691838314938415611048575b508315611032575b50505090565b61103e91929350610eea565b161438808061102c565b909350600052600560205260406000208260005260205260ff604060002054169238611024565b1561107657565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b906110f1916110d784610e8a565b6001600160a01b039391841692849290918316841461106f565b1691821561118e578161110e9161110786610e8a565b161461106f565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60008481526004602052604081206bffffffffffffffffffffffff60a01b9081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b156112f15761122d946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190610cf1565b03926001600160a01b03165af18491816112b1575b506112a0575050503d600014611298573d61125c81610deb565b9061126a6040519283610dc9565b81528091833d92013e5b805191826112955760405162461bcd60e51b815280610ffd60048201610f8a565b01fd5b506060611274565b6001600160e01b0319161492509050565b9091508581813d83116112ea575b6112c98183610dc9565b8101031261046457516001600160e01b031981168103610464579038611242565b503d6112bf565b5050915050600190565b9293600093909291803b1561137b579484916113559660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190610cf1565b0393165af18491816112b157506112a0575050503d600014611298573d61125c81610deb565b505050915050600190565b1561138d57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b8181106113dd575050565b600081556001016113d256fea2646970667358221220bba63a8b6d0bec928c03866800e0d8b24fe3dc42708743832cca236b96b6375364736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "approved";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "burn";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "uri";
            readonly type: "string";
        }];
        readonly name: "mint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): UserNftMinterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): UserNftMinter;
}
export {};
