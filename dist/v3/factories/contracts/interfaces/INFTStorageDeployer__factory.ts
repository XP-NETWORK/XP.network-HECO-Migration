/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  INFTStorageDeployer,
  INFTStorageDeployerInterface,
} from "../../../contracts/interfaces/INFTStorageDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
    ],
    name: "deployNFT1155Storage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
    ],
    name: "deployNFT721Storage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class INFTStorageDeployer__factory {
  static readonly abi = _abi;
  static createInterface(): INFTStorageDeployerInterface {
    return new utils.Interface(_abi) as INFTStorageDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): INFTStorageDeployer {
    return new Contract(address, _abi, signerOrProvider) as INFTStorageDeployer;
  }
}
