/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  INFTCollectionDeployer,
  INFTCollectionDeployerInterface,
} from "../../../contracts/interfaces/INFTCollectionDeployer";

const _abi = [
  {
    inputs: [],
    name: "deployNFT1155Collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "deployNFT721Collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class INFTCollectionDeployer__factory {
  static readonly abi = _abi;
  static createInterface(): INFTCollectionDeployerInterface {
    return new Interface(_abi) as INFTCollectionDeployerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): INFTCollectionDeployer {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as INFTCollectionDeployer;
  }
}
